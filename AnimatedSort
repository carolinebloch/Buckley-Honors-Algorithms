/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package animationsort;

import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;

/**
 *
 * @author carolinebloch
 */
public class AnimationSort extends Application {
    
    int size = 150;
    int num [] = new int [size];
    Rectangle rec [] = new Rectangle [size];
    StackPane root = new StackPane();
    HBox hb2 = new HBox(1);
    
    @Override
    public void start(Stage primaryStage) {
        
        HBox hb = new HBox(20);
        hb.setAlignment(Pos.BOTTOM_CENTER);
        hb.setPadding(new Insets (20, 20 , 20, 20));
        
        
        hb2.setAlignment(Pos.TOP_CENTER);
        hb2.setPadding(new Insets (20, 20 , 20, 20));
       
        create();
        
        Button start = new Button();
        start.setText("Start");
        start.setOnAction(new EventHandler<ActionEvent>() {
            
            @Override
            public void handle(ActionEvent event) {
                
            }
        });
        Button reset = new Button("Reset");
        reset.setOnAction(new EventHandler<ActionEvent>() {
            
            @Override
            public void handle(ActionEvent e) {
                
                hb2.getChildren().clear();
                create();
                System.out.println("here");
                
            }
        });
        
        hb.getChildren().addAll(start, reset);
        
        root.getChildren().addAll(hb, hb2);
        
          new Thread(() -> {
            try {
                sort();
            } catch (InterruptedException ex) {}
                }).start();
        
        Scene scene = new Scene(root, 500, 300);
        
        primaryStage.setTitle("Insert Sort");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }
    
    void create ()
    {
         for (int i = 0; i < size; i ++)
        {
            num [i] = (int) (Math.random() * 150 + 1);
            Rectangle r = new Rectangle ();
            r.setWidth(2);
            r.setHeight(num[i]);
            r.setFill(Color.CORNFLOWERBLUE);
            rec[i] = r;
            hb2.getChildren().add(rec[i]);
        }
    }
    
    void sort () throws InterruptedException
    {
       
        System.out.println();
        
        for (int x = 1; x < num.length; x++)
        {
            int index = num[x];
            
            int j = x;
            
            while (j > 0 && num[j-1] > index)
            {
                num[j] = num[j-1];
                rec[j].setHeight(num[j-1]);
                j--;
            }
            
            num[j] = index;
            rec[j].setHeight(index);
            Thread.sleep(200);
        } 
        
    }
    
}
