
package networkingdemoserver;

import java.io.DataInputStream;
import java.io.IOException;
import java.net.BindException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;


public class NetworkingDemoServer extends Application {
    Label lbl = new Label("...");
    DataInputStream fromClient;
    StackPane root;
    
    @Override
    public void start(Stage primaryStage) 
    {
        root = new StackPane();
        
        root.getChildren().add(lbl);
        
        Scene scene = new Scene(root, 300, 250);
        
        primaryStage.setTitle("Server");
        primaryStage.setScene(scene);
        primaryStage.show();
        primaryStage.setOnCloseRequest(e -> {
            System.exit(0);
            Platform.exit();
        });
        
        new Thread(() -> {
        startServer(8000);
        receiveSmth();
        }).start();
    }
    
    public void receiveSmth() 
    {
        while (true)
        {
            try {
                int x = fromClient.readInt();
                if (x == 0)
                {
                    int c = fromClient.readInt();
                    Platform.runLater(() -> lbl.setText(lbl.getText() + "\nI got " + c));
                }
                if (x == 1)
                {
                  String color = fromClient.readUTF();
                  Platform.runLater(() -> root.setStyle("-fx-background-color: " + color));
                }
                
            } catch (IOException ex) {}
        }
    }
    
    public void startServer(int port) 
    {
        try {
            ServerSocket serverSocket = new ServerSocket(port);
            Platform.runLater(() -> lbl.setText("Server started"));
            Socket socket = serverSocket.accept();
            Platform.runLater(() -> lbl.setText(lbl.getText() + "\nSomebody connected to me..."));
            fromClient = new DataInputStream(socket.getInputStream());
        } catch (BindException ex){
            Platform.runLater(() -> lbl.setText("Port " + port + " is busy"));
        } catch (IOException ex) {}
    }

    public static void main(String[] args) 
    {
        launch(args);
    }
    
}



package networkingdemoclient;

import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class NetworkingDemoClient extends Application {
    DataOutputStream toServer;
    
    
    @Override
    public void start(Stage primaryStage) 
    {
        TextField enterNumber = new TextField();
        TextField enterColor = new TextField();
        Label label1 = new Label ("Enter 0 and then a number: ");
        Label label2 = new Label ("Enter 1 and then a color: ");
        VBox root = new VBox();
        root.getChildren().addAll(label1, enterNumber, label2, enterColor);
        
        Scene scene = new Scene(root, 300, 250);
        
        primaryStage.setTitle("Client");
        primaryStage.setScene(scene);
        primaryStage.show();
        
        connectToServer("localhost", 8000);
        
        enterNumber.setOnAction(e -> {
            try {
                toServer.writeInt(0);
                toServer.writeInt(Integer.parseInt(enterNumber.getText()));
            } catch (IOException ex) {}
        });
        
        enterColor.setOnAction(e -> {
            try {
               toServer.writeInt(1);
               toServer.writeUTF(enterColor.getText());
            } catch (IOException ex) {}
        });
        
         
    }

    public void connectToServer(String ip, int port)
    {
        try {
            Socket socket = new Socket(ip, port);
            toServer = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {}
    }
    
    public static void main(String[] args) 
    {
        launch(args);
    }
    
}
