/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package halflines;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Point2D;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.shape.Line;
import javafx.scene.shape.Polygon;
import javafx.stage.Stage;

/**
 *
 * @author carolinebloch
 */
public class HalfLines extends Application {
    Pane root = new Pane();
    @Override
    public void start(Stage primaryStage) {
        
       Line line1 = new Line (372,500,628,500);
       
       Point2D A = new Point2D(372,500); 
       Point2D B = new Point2D(628,500); 
       
       root.getChildren().add(line1);
       
       hl(A,B,4,2);
        
        Scene scene = new Scene(root, 1000, 1000);
        
        primaryStage.setTitle("Half Lines");
        primaryStage.setScene(scene);
        primaryStage.show();
    }
    
    void hl (Point2D A, Point2D B, int depth, int count)
    {
//        int count = 1;
        if (count > depth) return;
        Point2D a = new Point2D (0,0);
        Point2D b = new Point2D (0,0);
        Polygon polly = new Polygon();
        double length = 0;
         if(B.getX() - A.getX() == 0)
         {
            length = B.getY() - A.getY();
            length = length/2;
         }
         else if(B.getY() - A.getY() == 0)
         {
             length = B.getX() - A.getX();
             length = length/2;
         }
         if (count % 2 == 0)
         {
          a.add(A.getX(), A.getY() - length);
          b.add(A.getX(), A.getY() + length);  
          
          polly.getPoints().addAll(a.getX(),a.getY(),b.getX(),b.getY());
          
          a.add(B.getX(), B.getY() - length);
          b.add(B.getX(), B.getY() + length);  
          
          polly.getPoints().addAll(a.getX(),a.getY(),b.getX(),b.getY());
      
//         Line l1 = new Line (A.getX(), A.getY() - (length/2),A.getX(),A.getY() + (length/2));
//         Line l2 = new Line (B.getX(), B.getY() - (length/2),B.getX(),B.getY() + (length/2));
         }
         else if (count % 2 != 0)
         {   
         a.add(A.getX() - length, A.getY());
         b.add(A.getX() + length, A.getY());
         
         polly.getPoints().addAll(a.getX(),a.getY(),b.getX(),b.getY());
         
         a.add(B.getX() - length, B.getY());
         b.add(B.getX() + length, B.getY());
         
         polly.getPoints().addAll(a.getX(),a.getY(),b.getX(),b.getY());
         
//         Line l1 = new Line (A.getX() - (length/2), A.getY(),A.getX() + (length/2),A.getY());
//         Line l2 = new Line (B.getX() - (length/2), B.getY(),B.getX() + (length/2),B.getY());
         }
         
         root.getChildren().add(polly);
         
         
         
         hl(a,b,depth,count+1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }
    
}
